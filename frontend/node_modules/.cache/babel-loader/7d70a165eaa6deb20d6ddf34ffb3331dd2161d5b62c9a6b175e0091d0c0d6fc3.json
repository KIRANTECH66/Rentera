{"ast":null,"code":"var _jsxFileName = \"/home/user/Rentera/frontend/src/components/dashboard/RecentDocuments.js\";\nimport React from 'react';\n\n// A simple component to list recent documents from all properties.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecentDocuments = ({\n  properties\n}) => {\n  // Extract all documents from all properties into a single array\n  const allDocuments = properties.flatMap(prop => prop.documents.map(doc => ({\n    ...doc,\n    propertyName: prop.name\n  })));\n\n  // Sort by date to get the most recent (assuming createdAt is available)\n  allDocuments.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  const recentDocs = allDocuments.slice(0, 5); // Show top 5 recent\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Recent Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), recentDocs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No documents uploaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recentDocs.map(doc => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [doc.fileName, \" (\", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: doc.propertyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 31\n        }, this), \") - \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'gray'\n          },\n          children: doc.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 62\n        }, this)]\n      }, doc.docId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = RecentDocuments;\nexport default RecentDocuments;\nvar _c;\n$RefreshReg$(_c, \"RecentDocuments\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecentDocuments","properties","allDocuments","flatMap","prop","documents","map","doc","propertyName","name","sort","a","b","Date","createdAt","recentDocs","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","color","status","docId","_c","$RefreshReg$"],"sources":["/home/user/Rentera/frontend/src/components/dashboard/RecentDocuments.js"],"sourcesContent":["import React from 'react';\n\n// A simple component to list recent documents from all properties.\nconst RecentDocuments = ({ properties }) => {\n  // Extract all documents from all properties into a single array\n  const allDocuments = properties.flatMap(prop =>\n    prop.documents.map(doc => ({ ...doc, propertyName: prop.name }))\n  );\n\n  // Sort by date to get the most recent (assuming createdAt is available)\n  allDocuments.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n\n  const recentDocs = allDocuments.slice(0, 5); // Show top 5 recent\n\n  return (\n    <div>\n      <h4>Recent Documents</h4>\n      {recentDocs.length === 0 ? (\n        <p>No documents uploaded yet.</p>\n      ) : (\n        <ul>\n          {recentDocs.map(doc => (\n            <li key={doc.docId}>\n              {doc.fileName} (<em>{doc.propertyName}</em>) - <span style={{ color: 'gray' }}>{doc.status}</span>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default RecentDocuments;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAC1C;EACA,MAAMC,YAAY,GAAGD,UAAU,CAACE,OAAO,CAACC,IAAI,IAC1CA,IAAI,CAACC,SAAS,CAACC,GAAG,CAACC,GAAG,KAAK;IAAE,GAAGA,GAAG;IAAEC,YAAY,EAAEJ,IAAI,CAACK;EAAK,CAAC,CAAC,CACjE,CAAC;;EAED;EACAP,YAAY,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC;EAE1E,MAAMC,UAAU,GAAGb,YAAY,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE7C,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBN,UAAU,CAACO,MAAM,KAAK,CAAC,gBACtBvB,OAAA;MAAAkB,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjCtB,OAAA;MAAAkB,QAAA,EACGF,UAAU,CAACT,GAAG,CAACC,GAAG,iBACjBR,OAAA;QAAAkB,QAAA,GACGV,GAAG,CAACW,QAAQ,EAAC,IAAE,eAAAnB,OAAA;UAAAkB,QAAA,EAAKV,GAAG,CAACC;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,QAAI,eAAAtB,OAAA;UAAMwB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAP,QAAA,EAAEV,GAAG,CAACkB;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAD3Fd,GAAG,CAACmB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACM,EAAA,GA3BI3B,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}